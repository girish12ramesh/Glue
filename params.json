{"name":"Glue","tagline":"View Injection library","body":"# Glue  [ ![Download](https://api.bintray.com/packages/rohitshampur/maven/Glue/images/download.svg) ](https://bintray.com/rohitshampur/maven/Glue/_latestVersion) [![License](https://img.shields.io/hexpm/l/plug.svg)](http://www.apache.org/licenses/LICENSE-2.0) [![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Glue-brightgreen.svg?style=flat)](http://android-arsenal.com/details/1/3264)\r\n\r\n<a href='https://bintray.com/rohitshampur/maven/Glue/view?source=watch' alt='Get automatic notifications about new \"Glue\" versions'><img src='https://www.bintray.com/docs/images/bintray_badge_color.png'></a>\r\n## A lightweight view and resource injection library for android \r\n\r\n###Usage\r\n#####gradle dependency\r\nAdd below dependency to build.gradle\r\n\r\n```\r\nrepositories {\r\n    jcenter()\r\n}\r\n\r\ndependencies {\r\n    compile 'com.rohitshampur.glue:glue:1.0.3'\r\n}\r\n```\r\n\r\n#####Maven dependency\r\n\r\nAdd this dependency to pom.xml\r\n```\r\n<dependency>\r\n  <groupId>com.rohitshampur.glue</groupId>\r\n  <artifactId>glue</artifactId>\r\n  <version>1.0.1</version>\r\n  <type>pom</type>\r\n</dependency>\r\n```\r\n\r\nTo start using this library create a class MyApplication extending Application class.\r\n\r\n```\r\npackage com.example.app;\r\n\r\nimport android.app.Application;\r\n\r\npublic class MyApplication extends Application {\r\n    @Override\r\n    public void onCreate() {\r\n        super.onCreate();\r\n        \r\n        Glue.prepare(R.id.class) //Initialize glue like this\r\n\r\n    }\r\n}\r\n```\r\nThen add the name of Application sub-class to the AndroidManifest.xml\r\n```\r\n<application\r\n        ----------------------\r\n        ---------------------\r\n        android:name=\".MyApplication\"\r\n        ----------------------------\r\n        ----------------------   >\r\n```\r\n\r\nNow start using the library like this\r\n\r\n**In Activities** :\r\n```\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    @StickToView\r\n    private TextView textView;  //variable name must be same as the id in the layout xml\r\n    \r\n    @StickToView(R.id.textView1)\r\n    private TextView text1;\r\n\r\n    @StickToResource(R.string.app_name)\r\n    private String name;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        \r\n        Glue.stickTo(this); //Initialize\r\n        \r\n        textView.setText(\"Testing glue\");\r\n        Toast.makeText(this, name, Toast.LENGTH_SHORT).show();\r\n        startActivity(new Intent(this, FragmentActivity.class));\r\n    }\r\n\r\n```\r\n**In Fragments**:\r\n```\r\npublic class MyFragment extends Fragment {\r\n\r\n    public MyFragment() {\r\n    }\r\n\r\n    @StickToView\r\n    Button button;\r\n\r\n    @Override\r\n    public void onViewCreated(View view, Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        \r\n        Glue.stickTo(this, view);//Initialize\r\n        \r\n        button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Toast.makeText(getActivity(), \"click!\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n}\r\n```\r\n####NOTE : To use @StickToView without specifiying the id you need to declare the variable name as same as the id in the layout xml\r\n\r\nThis library is inspired from [**Android Annotations library**](https://android-arsenal.com/details/1/128) and \r\n[**InjectIO**](https://android-arsenal.com/details/1/2994)\r\n\r\n###License\r\n\r\nCopyright &copy; 2016 Rohit Shampur(rohitshampur)\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}